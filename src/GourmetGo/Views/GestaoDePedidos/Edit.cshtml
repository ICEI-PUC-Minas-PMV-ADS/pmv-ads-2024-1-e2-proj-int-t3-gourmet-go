@model GourmetGo.Models.Pedido

@{
    ViewData["Title"] = "Edit";
}

<h1>Editar</h1>

<h4>Pedido</h4>
<hr />
<div class="row">
    <dl>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Usuario)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Usuario.Cpf)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Produto)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Produto.Descricao)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Observações)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Observações)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tipo)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tipo)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Endereço)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Endereço)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Pagamento)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Pagamento)
        </dd>
    </dl>
    <div class="col-md-4">
        <form asp-action="Edit">
            <div class="form-group">
                <label asp-for="Status" class="control-label"></label>
                <select asp-for="Status" class="form-control"></select>
                <span asp-validation-for="Status" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
