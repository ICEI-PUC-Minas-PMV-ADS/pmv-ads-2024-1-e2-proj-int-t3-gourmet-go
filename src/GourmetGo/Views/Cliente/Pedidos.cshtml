@model List<GourmetGo.Models.Pedido>;

<link rel='stylesheet'
    href='https://cdn-uicons.flaticon.com/2.4.0/uicons-regular-straight/css/uicons-regular-straight.css'>
<link rel='stylesheet' href='https://cdn-uicons.flaticon.com/2.4.0/uicons-solid-straight/css/uicons-solid-straight.css'>

@{
    ViewData["Title"] = "Cliente/Pedidos";
}

<div class="text-center">
    <div class="container-fluid h-100">
        <div class="row align-items-center justify-content-center h-100">
            <div class="col-md-6 col-lg-7">
                <img class="logo" src="~/images/logo.png" alt="logo">
                @* Nav-bar *@
                <ul class="nav-pedidos nav nav-tabs justify-content-center">
                    <li class="nav-item">
                        <button id="btn-historico" class="nav-link cor-nav-link"
                            onclick="showContent('historico')">Histórico</button>
                    </li>
                    <li class="nav-item">
                        <button id="btn-andamento" class="nav-link cor-nav-link" onclick="showContent('andamento')">Em
                            Andamento</button>
                    </li>
                </ul>
                <div class="container-rounded container bg-light">


                    @* Conteúdo *@
                    <div class="container bg-light">
                        @* Tela de Histórico e Em Andamento *@
                        <div id="historico" class="content active-content p-0">
                            <h3 class="fs-2">Histórico de Pedidos</h3>
                            <div class="container">
                                @foreach (var pedido in Model)
                                {
                                    <p class="text-start fs-6 ms-2 mb-0 data-horas-tamanho">Pedido @pedido.Id -
                                        @pedido.Status
                                    </p>
                                    <div class="pedido-card">
                                        <div class="d-flex fs-6 flex-column ">
                                            @foreach (var item in pedido.PedidoProdutos)
                                            {
                                                <div class="d-flex mb-">
                                                    <p class="quantidade-texto text-start me-2">@item.Quantidade</p>
                                                    <p class="text-start">@item.Produto.Nome</p>
                                                </div>
                                            }
                                        </div>
                                        <p class="total mb-0">Total: R$@pedido.PedidoProdutos.Sum(pp => pp.Produto.Preco *
                                        pp.Quantidade).ToString("0.00")</p>
                                    </div>
                                }
                            </div>
                            <a href="@Url.Action("Index", "Cliente", new { id =  @ViewBag.ClienteId })"
                                class=" mb-0 fs-3 btn btn-light voltar-button">Voltar</a>
                        </div>

                        <div id="andamento" class="content p-0">
                            <h3>Pedidos em Andamento</h3>
                            <div class="container">
                                @foreach (var pedido in Model)
                                {
                                    @if (pedido.Status == StatusDoPedido.EmAndamento || pedido.Status ==
                                   StatusDoPedido.EmPreparo || pedido.Status == StatusDoPedido.ProntoParaEntrega)
                                    {
                                        <div class="container d-flex  flex-column mb-1">
                                            <div class="d-flex flex-row">
                                                <p class="text me-2 mb-0">Pedido:</p>
                                                @foreach (var item in pedido.PedidoProdutos)
                                                {
                                                    <p class="text-start d-flex me-1 mb-0">@item.Produto.Nome, </p>
                                                }
                                            </div>
                                            <div
                                                class="d-flex flex-row justify-content-start align-items-center bg-card text-light text-start p-2">
                                                @if (pedido.Status == StatusDoPedido.EmAndamento)
                                                {
                                                    <i class="fs-4 fi fi-rs-clock-two me-3 m-0 p-0 d-flex"></i> @pedido.Status
                                                }
                                                else if (pedido.Status == StatusDoPedido.EmPreparo)
                                                {
                                                    <i class="fs-4 fi fi-rs-user-chef me-3"></i> @pedido.Status
                                                }

                                            </div>
                                            <p class="total fs-6">Total: R$@pedido.PedidoProdutos.Sum(pp => pp.Produto.Preco *
                                        pp.Quantidade).ToString("0.00")</p>
                                        </div>
                                    }
                                }
                            </div>
                            <a href="@Url.Action("Index", "Cliente", new { id =  @ViewBag.ClienteId })"
                                class=" mb-0 fs-3 btn btn-light voltar-button">Voltar</a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    .cor-nav-link {
        color: white;
    }

    .pedido-card {
        background-color: #0c847b;
        color: white;
        padding: 15px;
        border-radius: 10px;
        margin-bottom: 15px;
    }

    .bg-card {
        background-color: #0c847b;
    }

    .total {
        text-align: end;
        font-size: 20px;
    }

    .voltar-button {
        display: block;
        margin: 20px auto;
        width: 100px;
    }

    .data-horas-tamanho {
        font-size: 13px;
    }

    .container-rounded {
        border-radius: 20px;
    }

    .content {
        display: none;
        background-color: white;
        padding: 20px;
        border-radius: 10px;
    }

    .active-content {
        display: block;
    }

    .active-btn {
        background-color: white !important;
        color: black !important;
        border: 1px solid #ccc;
    }

    .nav-btn {
        margin-right: 10px;
    }

    .nav-pedidos {
        border: none;
    }
</style>

<script>

    function showContent(id) {
        // Esconder todas as seções de conteúdo
        document.querySelectorAll('.content').forEach(section => {
            section.classList.remove('active-content');
        });

        // Remover a classe ativa de todos os botões
        document.querySelectorAll('.nav-link').forEach(button => {
            button.classList.remove('active-btn');
        });

        // Mostrar a seção de conteúdo selecionada
        document.getElementById(id).classList.add('active-content');

        // Adicionar a classe ativa ao botão correspondente
        document.getElementById('btn-' + id).classList.add('active-btn');
    }

    // Inicializar o estado inicial
    showContent('andamento');


</script>